name: ci/cd workflow

on:
  push:
    branches:
      - develop
      - features/*
  pull_request:
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [7.1]

    name: Test - PHP ${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Copy ENV Laravel Configuration for CI
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install dependencies
        run: composer update --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Execute tests
        run: vendor/bin/phpunit --verbose

  build:
    name: Publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ 7.1 ]

    steps:
      - name: Checkout code

        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Tag
        uses: ChloePlanet/github-tag-action@master
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: main

      - name: Publish Docker Image
        if: ${{ steps.tag.outputs.tag_generated == 1 }}
        uses: machine-learning-apps/gpr-docker-publish@master
        id: docker
        with:
          IMAGE_NAME: 'geekshubs-library_app'
          TAG: ${{ steps.tag.outputs.new_tag }}
          DOCKERFILE_PATH: 'Dockerfile'
          BUILD_CONTEXT: '.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: ${{ steps.tag.outputs.tag_generated == 1 }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: Release ${{ steps.tag.outputs.new_tag }}
          draft: false
          prerelease: false

