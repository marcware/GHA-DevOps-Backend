name: Publish

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Publish
    runs-on: ubuntu-latest
    steps:

      - name: Check out code into the Laravel
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Tag
        uses: ChloePlanet/github-tag-action@master
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: main

      - name: Publish Docker Image
        if: ${{ steps.tag.outputs.tag_generated == 1 }}
        uses: machine-learning-apps/gpr-docker-publish@master
        id: docker
        with:
          IMAGE_NAME: 'geekshubs-library_app'
          TAG: ${{ steps.tag.outputs.new_tag }}
          DOCKERFILE_PATH: 'Dockerfile'
          BUILD_CONTEXT: '.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: ${{ steps.tag.outputs.tag_generated == 1 }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: Release ${{ steps.tag.outputs.new_tag }}
          draft: false
          prerelease: false

      - name: Install SSH key
        if: ${{ steps.tag.outputs.tag_generated == 1 }}
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY }}
          known_hosts: ${{ secrets.HOST }}

      - name: Deploy
        if: ${{ steps.tag.outputs.tag_generated == 1 }}
        run: |
          docker context create remote --docker "host=ssh://${{ secrets.USERNAME }}@${{ secrets.HOST }}"
          docker --context remote login -u ${{ secrets.GITHUB_USERNAME }} -p ${{ secrets.TOKEN }} docker.pkg.github.com
          COMPOSE_HTTP_TIMEOUT=120 TAG=${{ steps.tag.outputs.new_tag }} docker-compose --context remote -f docker-compose-prod.yml pull app
          COMPOSE_HTTP_TIMEOUT=120 TAG=${{ steps.tag.outputs.new_tag }} docker-compose --context remote -f docker-compose-prod.yml up -d app

